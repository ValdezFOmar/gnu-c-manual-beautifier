@import 'normalize.css';
@import 'highlights.css';

/** General **/

:root {
    --blue: #638df2;
    --purple: #9e6ffe;
    --white: #c5d1f1;
    --item-spacing: 0.4em;
    --bg: #19191a;
    --fg: var(--white);
    --contrast-bg: #0b0d0e;
    --light-bg: #2c2f40;
    --border-color: #919199;
    margin: 0;
    font-size: 100%;
    color: var(--fg);
    height: 100%;
    box-sizing: border-box;
    background:
        var(--contrast-bg) top/10% repeat url('../assets/c-letter-pattern.png') fixed;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    margin: 0 auto;
    max-width: 800px;
    min-height: 100%;
    background-color: var(--bg);
    padding: 0.5rem 2rem 1rem;
    box-shadow: 0 0 40px 40px #070707EE;
    /* styling for pushing the footer to the bottom */
    display: flex;
    flex-direction: column;
}

hr {
    color: var(--border-color);
}

p {
    text-align: justify;
}

p,
ul,
ol {
    letter-spacing: 0.5px;
    line-height: 1.3;
}

li {
    margin-bottom: var(--item-spacing);
}

dl dt {
    font-weight: bold;
    font-size: 1.1em;
}

/* Follow this precise order for links */
a {
    text-decoration: none;
}

a:link {
    color: var(--blue);
}

a:visited {
    color: var(--blue);
}

a:focus-visible {
    outline: var(--blue) solid 1px;
    outline-offset: 2px;
}

a:hover {
    text-decoration: underline 1px;
}

a:active {
    color: var(--purple);
}


/** Layout **/
.chapter-level-extent,
.section-level-extent,
.subsection-level-extent {
    /* This makes the container for the main content expand and push the footer to the bottom */
    flex-grow: 1;
    /**
     * Use for containing float elements that overflow the parent. See:
     * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_display/Block_formatting_context#contain_internal_floats
     */
    display: flow-root;
}

/** Footer **/
#footer {
    flex-shrink: 0;
}

.footnote-body-heading {
    margin: 0 0.6em 0.4em 0;
    float: left;
}


/** Table of contents **/
:is(.contents, .shortcontents) li {
    margin-block: calc(var(--item-spacing) / 2);
}

.contents>ul>li {
    margin-bottom: calc(var(--item-spacing) * 2);
}

.mini-content {
    width: fit-content;
    margin: 4px 1em 0.9em 4px;
    padding: 1em 1.2em;
    border: 0.15em solid var(--border-color);
    border-radius: 0.4em;
    float: left;
}

.mini-content-header {
    font: 1.2em;
    font-weight: bold;
    display: block;
    margin-block: 0 0.8em;
}

.mini-toc {
    margin: 0;
    padding-left: 1.5em;
    display: flex;
    flex-flow: column;
    gap: var(--item-spacing);
}

.mini-toc li {
    margin: 0
}

.mini-toc a {
    color: inherit
}


/** Navbar **/

/* For 'Content' and 'Index' */
.nav-index {
    display: flex;
    justify-content: center;
    column-gap: 2em;
}

.nav-index a {
    width: 100px;
    text-align: center;
}

/* For 'next', 'previous' and 'up' */
.nav-topics {
    display: grid;
    align-items: center;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    margin-block: 0.3em;
    column-gap: 1em;
}

.nav-topics a {
    height: 100%;
    color: var(--fg);
    text-wrap: balance;
    text-decoration: none;
    border-radius: 0.3em;
    padding-block: 0.3em;
    transition-duration: 0.1s;
    display: flex;
    align-items: center;
    gap: 0.2em;
}

.nav-topics a:focus-visible,
.nav-topics a:hover,
.nav-topics a:active {
    background-color: var(--light-bg);
    outline-offset: 0;
}

.nav-topics>a:first-child {
    text-align: start;
    justify-content: start;
}

.nav-topics>a:nth-child(2) {
    text-align: center;
    justify-content: center;
}

.nav-topics>a:nth-child(3) {
    text-align: end;
    justify-content: end;
}


/** Code **/
span.r {
    font: inherit;
    color: #848cad;
}

div.example {
    margin: 1em 0;
    padding: 1em;
    background-color: var(--contrast-bg);
    border-radius: 0.6em;
    overflow-x: scroll;
    /**
     * FIXME: In some cases where the TOC is too tall, an .example element below
     * will create a huge gap, but if this rule is removed then in other cases the
     * code will be moved to the right but it will not wrap around, creating a gap
     * under the TOC.
     * A possible solution could be to dynamically (javascript) change the styling
     * depending on the size, using 2 clases: one for 'clear: both' and another for
     * 'clear: none'
     *
     * Another possible solution would be to not let any element clear from any
     * direction, but instead expand the floating element to fill the gap
     */
    clear: both;
}

table td.code {
    padding-left: 1em;
}

:not(pre) code.code {
    font-size: 0.9em;
    padding: 0.2em 0.33em;
    background-color: var(--light-bg);
    border-radius: 0.4em;
}

div.example :is(pre, .normal) {
    margin: 0;
    background: none;
    font-size: 0.9em;
    line-height: 1.3;
}

pre.example-preformatted code.code {
    color: inherit;
    font-weight: bold;
}
